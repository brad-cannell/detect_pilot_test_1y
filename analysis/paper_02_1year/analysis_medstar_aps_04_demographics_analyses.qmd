---
title: "DETECT 1-Year Demographics Analyses"
format: html
#editor: visual
---

# Imports

## Library Imports

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(here)
library(mice)
library(ggplot2)
```

## Data Imports

We imported the revised MedStar data set for processing.

```{r}
medstar <- readRDS(here("data", "02 Shared Folders", "DETECT Shared GRAs", 
                        "medstar_cleaning", "medstar_04.rds"))
```

We imported the revised APS data set for processing.

```{r}
aps <- readRDS(here("data", "02 Shared Folders", "DETECT Shared GRAs", 
                    "aps_cleaning", "aps_06.rds"))
```

We imported the merged data set that included all MedStar responses and any paired data.

```{r}
paired_df <- readRDS(here("data", "02 Shared Folders", "DETECT Shared GRAs", 
                          "merge_aps_medstar",
                "medstar_aps_merged_02_response_based_row_pairs.rds"))
```

We imported the merged data set that included the subject-wide aggregate data.

```{r}
subj_df <- readRDS(here("data", "02 Shared Folders", "DETECT Shared GRAs", 
                        "merge_aps_medstar",
                         "medstar_aps_merged_03_single_subject_per_row.rds"))
```

We imported the data set which included the case number paired data created from temporal matching of responses to APS case intake windows.

```{r}
case_data <- readRDS(here("data", "02 Shared Folders", "DETECT Shared GRAs",
                            "merge_aps_medstar",
                            "medstar_aps_merged_04_temporal_case_nums.rds"))
```

## Functions

### Unique Value Summary

A function written in a previous cleaning document was imported. It was written to display counts of each unique observations within a selection of columns.

```{r}
get_unique_value_summary <- function(df,cols){
  
  # Input: 
  #     df (data frame) - original source data frame
  #     cols (list) - list of target column names as strings
  # Output:
  #     unique_summary (data frame) - summary counts of each unique value in
  #           each of the target columns
  
  # Get list of unique values in all target columns
  
  val <- unique(as.factor(as.vector(as.matrix(df[cols]))))
  
  # Initialize output data frame with unique value row
  
  unique_summary <- data.frame("value"=val)
  
  # Get counts of unique values in original data frame
  
  for (i in cols){
    
    # utilizes table to get summary count of each column
    
    table <- as.data.frame(table(df[i]))
    
    # sets column names to "value" and "freq"
    
  colnames(table) <- c("value","freq")
  
    # adds count of missing values in each column
  
  table<- add_row(table, value = NA, freq = sum(is.na(df[i])))
  
    # readjusts names of columns to "value" and the name of the target column
  
  colnames(table) <- c("value",i)
  
    # joins table's summary counts to complete the count values
  
    unique_summary <- left_join(unique_summary,table, by="value")
  }
  
  # returns completed, but unordered, data frame
  
  unique_summary
  }
```

# Creating Uniform Subject Demographics

## Age

Age was calculated as the average of ages (omitting missing values) for each subject.

```{r}
age_data <- case_data %>%
  select(id, pt_age) %>%
  distinct()

nrow(age_data)
length(unique(age_data$id))

age_data <- age_data %>%
  group_by(id) %>%
  mutate(total_age = sum(pt_age, na.rm = TRUE),
         num_obs = length(na.omit(pt_age))) %>%
  mutate(avg_age = total_age/num_obs) %>%
  ungroup() %>%
  select(id, avg_age) %>%
  rename_at('avg_age', ~'pt_age') %>%
  distinct()

nrow(age_data)
length(unique(age_data$id))
```

## Race and Ethnicity

We isolated race and ethnicity data for each subject. All 16,565 subjects were represented in the subset, though several subjects had multiple values listed for race/ethnicity resulting in 17,018 distinct values.

```{r}
race_data <- case_data %>%
  select(id, pt_race, pt_hispanic) %>%
  distinct()

nrow(race_data)
length(unique(race_data$id))
```

There were 440 subjects were duplicated into 893 rows. There were 16,125 subjects that were given consistent values for race and ethnicity. These subjects with consistent values were separated.

```{r}
duplicates <- race_data[duplicated(race_data$id)|
                         duplicated(race_data$id, fromLast = TRUE),]

nrow(duplicates)
length(unique(duplicates$id))

race_data <- race_data %>%
  filter(!(id %in% duplicates$id)) %>%
  add_column(multi_ethn = FALSE, multi_race = FALSE)

nrow(race_data)
length(unique(race_data$id))
```

All subjects with one value for race, that were listed both as Hispanic and not Hispanic, were manually reviewed. These subjects were listed as "Hispanic" for all entries.

```{r}
checking <- case_data %>%
  filter(!(id %in% race_data$id)
         ) %>%
  select(id, pt_race, pt_hispanic) %>%
  group_by(id) %>%
  mutate(count = n_distinct(pt_race)
         ) %>%
  mutate(pt_hispanic = ifelse(count == 1 & any(pt_hispanic), TRUE, pt_hispanic)
         ) %>%
  ungroup()

resolved <- checking %>%
  filter(count == 1) %>%
  distinct () %>%
  select(-count) %>%
  add_column(multi_ethn = TRUE, multi_race = FALSE)

nrow(resolved) == length(unique(resolved$id))
length(unique(resolved$id))
```

These 9 subjects were re-added to the race data set.

```{r}
nrow(race_data)
race_data <- rbind(race_data, resolved)
nrow(race_data)
```

Subjects with two values for race, where one of these possibilities was a missing value, had the non-missing value made primary. There was a single subject within this group which also had multiple values for Hispanic ethnicity. Upon removal of the missing values for race and conversion of ethnicity values to a consistent "TRUE" if ever "TRUE" for a subject, the values were reduced to a single combination.

```{r}
checking <- checking %>%
  filter(!(id %in% race_data$id)
         ) %>%
  filter(!is.na(pt_race)
         ) %>%
  group_by(id) %>%
  mutate(count = n_distinct(pt_race)
         ) %>%
  ungroup()
  

resolved <- checking %>%
  filter(count == 1) %>%
  select(-count) %>%
  distinct () %>%
  add_column(multi_ethn = FALSE, multi_race = FALSE)

nrow(resolved) == length(unique(resolved$id))

resolved[resolved$id == 
           resolved[duplicated(resolved$id),
                    ]$id,]$pt_hispanic <- TRUE

resolved[resolved$id == 
           resolved[duplicated(resolved$id),
                    ]$id,]$multi_ethn <- TRUE

resolved <- distinct(resolved)

nrow(resolved) == length(unique(resolved$id))
length(unique(resolved$id))
```

These 183 subjects were re-added to the race data set.

```{r}
nrow(race_data)
race_data <- rbind(race_data, resolved)
nrow(race_data)
```
There were 248 remaining subjects, which represented 504 combinations of race, ethnic, and ID data.

```{r}
checking <- checking %>%
  filter(!(id %in% race_data$id)
         ) %>%
  group_by(id) %>%
  mutate(count = n_distinct(pt_race)
         ) %>%
  ungroup() %>%
  group_by(id, pt_race, pt_hispanic) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  add_column(multi_ethn = FALSE, multi_race = FALSE)

nrow(checking)
length(unique(checking$id))
```

These 248 subjects were manually checked and sorted based on frequencies of occurence.

```{r}
m_racial <- c(43, 194, 218, 431, 533, 972, 1022, 1418, 1458, 1460, 1598, 1670, 
              1696, 1782, 1892, 1920, 2084, 11337, 11402, 11564, 11952, 12012, 
              12236, 12369, 12560, 12592, 12924, 13008, 13079, 13664, 13854, 
              13942, 13978, 14175, 14338, 14526, 14536, 14872, 15030, 15139, 
              15279, 15419, 15421, 15599, 15801, 16929, 17298, 17373, 17887, 
              18146, 18421, 18780, 18903, 19084, 19133, 19329, 19411, 19656, 
              20000, 20196, 20934, 23813)

checking[checking$id %in% m_racial,]$pt_race <- "Multiracial"
checking[checking$id %in% m_racial,]$multi_race <- TRUE


black_racial <- c(53,145,208, 425, 711, 721, 732, 783, 906, 1408, 1479, 1524, 
                  1762, 1839, 11122, 11128, 11262, 11289, 11549, 11611, 11660, 
                  11693, 11719, 12100, 12288, 12290, 12537, 12629, 12984, 12996, 
                  13062, 13324, 13782, 14095, 14299, 14697, 15418, 16077, 16447, 
                  16564, 17615, 17969, 19199, 19675, 20352)

checking[checking$id %in% black_racial,]$pt_race <- "Black or African American"
checking[checking$id %in% black_racial,]$multi_race <- TRUE


white_racial <- c(151, 311, 477, 563, 759, 778, 801, 814, 862, 902, 1006, 1013, 
                  1021, 1050, 1109, 1228, 1248, 1254, 1371, 1414, 1477, 1500, 
                  1517, 1537, 1575, 1639, 1748, 1750, 1928, 11132, 11214, 11258, 
                  11480, 11613, 11617, 11656, 11808, 11841, 11937, 11964, 12009, 
                  12082, 12153, 12201, 12265, 12382, 12539, 12570, 12641, 12664, 
                  12744, 12745, 12952, 12962, 12991, 13088, 13106, 13142, 13186, 
                  13246, 13443, 13477, 13621, 13650, 13770, 13809, 13861, 14211, 
                  14298, 14316, 14328, 14353, 14517, 14623, 14643, 14933, 14993, 
                  15089, 15372, 15419, 15856, 15879, 15921, 15958, 16079, 16107, 
                  16217, 16381, 16408, 16618, 16751, 16999, 17150, 17265, 17327, 
                  17485, 17665, 17775, 18035, 18089, 18127, 18387, 18510, 18628, 
                  19042, 19116, 19206, 19337, 19574, 19782, 19913, 19947, 20015, 
                  20248, 20371, 20377, 20506, 20601, 21925, 22028, 22078, 23526, 
                  24454)

checking[checking$id %in% white_racial,]$pt_race <- "White"
checking[checking$id %in% white_racial,]$multi_race <- TRUE


asian_racial <- c(417, 567, 1571, 12055, 13862, 14822, 14848, 15271, 16895, 
                  17179, 17733, 17778, 18643, 19580, 22729)

checking[checking$id %in% asian_racial,]$pt_race <- "Asian"
checking[checking$id %in% asian_racial,]$multi_race <- TRUE


pi_racial <- c(418, 1478, 11489, 13477, 16124, 21234)

checking[checking$id %in% pi_racial,]$pt_race <- "Native Hawaiian or Other Pacific Islander"
checking[checking$id %in% pi_racial,]$multi_race <- TRUE


hispanic_ethn <- c(208, 311, 418, 477, 711, 862, 906, 972, 1013, 1109, 1228, 
                   1248, 1408, 1477, 1478, 1639, 1748, 1892, 11122, 11214, 
                   11258, 11480, 11489, 11549, 11613, 11656, 11808, 11937, 
                   11964, 12082, 12153, 12265, 12288, 12382, 12539, 12570, 
                   12991, 13062, 13142, 13186, 13246, 13650, 13770, 13809, 
                   14211, 14298, 14299, 14316, 14328, 14353, 14933, 15089, 
                   15372, 15958, 16079, 16217, 16381, 16447, 16564, 16618, 
                   17665, 17775, 17969, 18035, 18089, 18387, 18510, 18628, 
                   19206, 19574, 19782, 19947, 20248, 20371, 20377, 21234)

checking[checking$id %in% hispanic_ethn,]$pt_hispanic <- TRUE
checking[checking$id %in% hispanic_ethn,]$multi_ethn <- TRUE


nonhisp_ethn <- c(151, 425, 759, 902, 1021, 1050, 1782, 11289, 12537, 12962, 
                  13088, 13324, 13477, 13862, 14623, 15879, 19199)

checking[checking$id %in% nonhisp_ethn,]$pt_hispanic <- FALSE
checking[checking$id %in% nonhisp_ethn,]$multi_ethn <- TRUE
```

These 248 subjects were verified to be resolved to a single combination of race and ethnicity.

```{r}
checking <- checking %>%
  select(-count) %>%
  distinct()

nrow(checking) == length(unique(checking$id))
```
These 248 subjects were re-added to the race data set, resulting in resolution of race/ethnicity data for all 16,565 subjects.

```{r}
nrow(race_data)
race_data <- rbind(race_data, checking)
nrow(race_data)
```

## Sex

We isolated subject sex/gender for all subjects. All 16,565 subjects were represented in the subset, though several subjects had multiple values listed for race/ethnicity resulting in 17,018 distinct values.

```{r}
sex_data <- case_data %>%
  select(id, pt_gender) %>%
  distinct()

nrow(sex_data)
length(unique(sex_data$id))
```

There were 437 subjects were duplicated into 219 rows. There were 16,347 subjects that were given consistent values for sex/gender. These subjects with consistent values were separated.

```{r}
duplicates <- sex_data[duplicated(sex_data$id)|
                         duplicated(sex_data$id, fromLast = TRUE),]

nrow(duplicates)
length(unique(duplicates$id))

sex_data <- sex_data %>%
  filter(!(id %in% duplicates$id)) %>%
  add_column(multi_sex = FALSE)

nrow(sex_data)
length(unique(sex_data$id))
```

Subjects with two values for sex/gender, where one of these possibilities was a missing value, had the non-missing value made primary. 

```{r}
checking <- case_data %>%
  filter(!(id %in% sex_data$id)
         ) %>%
  select(id, pt_gender) %>%
  filter(!is.na(pt_gender)
         ) %>%
  group_by(id) %>%
  mutate(count = n_distinct(pt_gender)
         ) %>%
  ungroup()
  

resolved <- checking %>%
  filter(count == 1) %>%
  select(-count) %>%
  distinct () %>%
  add_column(multi_sex = FALSE)

nrow(resolved) == length(unique(resolved$id))

resolved <- distinct(resolved)

nrow(resolved) == length(unique(resolved$id))
length(unique(resolved$id))
```

These 113 subjects were re-added to the sex/gender data set.

```{r}
nrow(sex_data)
sex_data <- rbind(sex_data, resolved)
nrow(sex_data)
```
The remaining 105 subjects each had observations listing them as "Male" and "Female", resulting in 210 possibilities.

```{r}
checking <- case_data %>%
  filter(!(id %in% sex_data$id)
         ) %>%
  select(id, pt_gender) %>%
  filter(!is.na(pt_gender)
         ) %>%
  group_by(id, pt_gender) %>%
  summarise(count=n()
            ) %>%
  ungroup() %>%
  rowwise() %>%
  mutate(names = paste(case_data[case_data$id == id,]$pt_name_full, collapse = "', '")
         ) %>%
  ungroup() %>%
  add_column(multi_sex = TRUE)

nrow(checking)
length(unique(checking$id))
```

These 105 subjects were manually checked and sorted into "Male" and "Female" based on the frequency of each assignment in the MedStar data set, and other identifiers present in the data set such as name.

```{r}
male_sex <- c(11, 145, 877, 961, 1099, 1209, 1231, 1716, 1772, 1809, 2107, 
              11200, 11245, 11324, 11507, 12390, 12548, 12887, 13153, 13218,
              13666, 14136, 15089, 15147, 15214, 15578, 15687, 16192, 16623,
              16977, 17076, 17983, 18059, 19333, 19580, 19799, 19842, 20454,
              20469, 20506, 22020, 22344, 22547, 24275)

checking[checking$id %in% male_sex,]$pt_gender <- "Male"

female_sex <- c(143, 153, 158, 194, 366, 450, 550, 699, 725, 938, 1104, 1138,
                1158, 1488, 1589, 11128, 11298, 11436, 11518, 11871, 12160, 
                12256, 12288, 12290, 12401, 12451, 12454, 12680, 12786, 12917,
                12990, 13321, 13589, 13791, 14216, 14489, 14555, 15030, 15396,
                15453, 15510, 15717, 15720, 15758, 16130, 16247, 16365, 16376,
                16592, 16599, 17154, 17264, 17362, 17586, 19564, 19856, 20448,
                21061, 22720, 23602, 24588)

checking[checking$id %in% female_sex,]$pt_gender <- "Female"
```

The results of cleaning were verified.

```{r}
checking <- checking %>%
  select(-c('names', 'count')
         ) %>%
  distinct()

nrow(checking) == length(unique(checking$id))
length(unique(checking$id))
```

These 113 subjects were re-added to the sex/gender data set.

```{r}
nrow(sex_data)
sex_data <- rbind(sex_data, checking)
nrow(sex_data)
```

## Combined Subject Level Demographics

The three demographic data sets were then joined.

```{r}
demo_data <- left_join(age_data, race_data, by="id")
demo_data <- left_join(demo_data, sex_data, by="id")
```

This merged data set contained 16,565 subjects, each represented by a single row.

```{r}
nrow(demo_data)
nrow(demo_data) == length(unique(demo_data$id))
```

This map was saved to facilitate different analyses, if needed.

```{r}
saveRDS(demo_data, here(here("data", "02 Shared Folders", "DETECT Shared GRAs", 
                          "merge_aps_medstar",
                "merged_aps_medstar_00_demographics_by_subject.rds")))
```

We isolated the subject-level data from our data sets, then merged the subject-level demographic data.

```{r}
subj_lvl_data <- case_data %>%
  group_by(id) %>%
  mutate(detect_ever_screened = ifelse(sum(detect_screened) > 0, TRUE, FALSE)
         ) %>%
  mutate(detect_ever_positive = case_when(
    !detect_ever_screened ~ NA,
    detect_ever_screened & sum(detect_positive, na.rm = TRUE) > 0 ~ TRUE,
    detect_ever_screened & sum(detect_positive, na.rm = TRUE) == 0 ~ FALSE)
    ) %>%
  ungroup() %>%
  select(id, aps_person_id, ms_id, all_of(starts_with("aps_subject_")),
         detect_ever_screened, detect_ever_positive,
         all_of(starts_with("ms_subj_"))
         ) %>%
  distinct()

nrow(subj_lvl_data)
length(unique(subj_lvl_data$id))

subj_lvl_data <- left_join(subj_lvl_data, demo_data, by = "id") %>%
  relocate(id, aps_person_id, ms_id, pt_race, pt_hispanic, pt_gender)
```


# Analyses

## Check of Manual Assignments

There were 105 subjects with manual assignment of sex/gender (0.63% of subjects). This resulted in 61 subjects (58.095%) assigned "Female" and 44 (41.905%) assigned "Male".

```{r}
total_multi <- sum(subj_lvl_data$multi_sex)

total_multi
total_multi*100/nrow(subj_lvl_data)

counts <- as.data.frame(table(subj_lvl_data %>%
  select(pt_gender, multi_sex) %>%
  filter(multi_sex))) 

counts <- counts %>%
  mutate(percent = Freq*100/total_multi) %>%
  select(pt_gender, Freq, percent)

counts
```

There were 248 subjects with manual assignment of race (1.497% of subjects). This resulted in 121 subjects (48.790%) assigned "White", and 45 (18.145%) assigned "Black or African American", 15 (6.048%) assigned "Asian", 6 (2.419%) assigned "Native Hawaiian or Other Pacific Islander", and 61 (24.597%) assigned "Multiracial". No subjects were assigned "American Indian or Alaska Native" or "Other Race".

```{r}
total_multi <- sum(subj_lvl_data$multi_race)

total_multi
total_multi*100/nrow(subj_lvl_data)

counts <- as.data.frame(table(subj_lvl_data %>%
  select(pt_race, multi_race) %>%
  filter(multi_race))) 

counts <- counts %>%
  mutate(percent = Freq*100/total_multi) %>%
  select(pt_race, Freq, percent)

counts
```

There were 103 subjects with manual assignment of ethnicity (0.622% of subjects). This resulted in 86 subjects (83.495%) assigned "Hispanic or Latino" and 17 (16.505%) assigned "Not Hispanic or Latino"

```{r}
total_multi <- sum(subj_lvl_data$multi_ethn)

total_multi
total_multi*100/nrow(subj_lvl_data)

counts <- as.data.frame(table(subj_lvl_data %>%
  select(pt_hispanic, multi_ethn) %>%
  filter(multi_ethn))) 

counts <- counts %>%
  mutate(percent = Freq*100/total_multi) %>%
  select(pt_hispanic, Freq, percent)

counts
```

## Comparison with Census Data

### Age

The age of the subjects in our data set ranged from 65 to 119 years, with a mean of 76.87 years with a standard deviation of 8.502 years. The quartile values for age were 69.50, 76.0, and 83.0 years, respectively. 

```{r}
summary(subj_lvl_data$pt_age)
sd(subj_lvl_data$pt_age)
```

In examination of the distribution of ages in our subjects, we find the distribution is unimodal at the low range of values with significant right skew. It is not approximately normally distributed

```{r}
hist(subj_lvl_data$pt_age)
```

### Sex/Gender

Observed counts of sex/gender were isolated. Expected counts were calculated utilizing [US Census data for Fort Worth](https://www.census.gov/quickfacts/fact/table/fortworthcitytexas/POP060210), which indicated 51.2% of the population were "Female", with "Male" and "Female" as the only selection options. Chi-Square and Fisher testing indicated a p-value > 0.05, indicating no statistically significant heterogeneity. 

```{r}
obs <- as.data.frame(table(subj_lvl_data$pt_gender))
t_total <- length(unique(subj_lvl_data$id))
obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "Female" ~ t_total*0.512,
                               Var1 == "Male" ~ t_total*(1-0.512),
                               Var1 == "Missing" ~ t_total*0
                               )
         ) %>%
  rename_at('Var1', ~'sex') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

This was consistent when we omit subjects that were missing a value for sex/gender.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!is.na(pt_gender))

obs <- as.data.frame(table(t_omit$pt_gender))
t_total <- length(unique(t_omit$id))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "Female" ~ t_total*0.512,
                               Var1 == "Male" ~ t_total*(1-0.512)
                               )
         ) %>%
  rename_at('Var1', ~'sex') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

It also remained consistent when we omitted the subjects with multiple values for sex.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!multi_sex)

obs <- as.data.frame(table(t_omit$pt_gender))
t_total <- length(unique(t_omit$id))
obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "Female" ~ t_total*0.512,
                               Var1 == "Male" ~ t_total*(1-0.512),
                               Var1 == "Missing" ~ t_total*0)) %>%
  rename_at('Var1', ~'sex') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

### Race

Observed counts for each race value were isolated. Expected counts were calculated utilizing [US Census data for Fort Worth](https://www.census.gov/quickfacts/fact/table/fortworthcitytexas/POP060210), which indicated that single racial identifications of "White" were made by 55.8% of the population, "Black or African American" by 18.8% of the population, "American Indian and Alaska Native" by 0.5%, "Asian" by 4.9%, "Native Hawaiian and Other Pacific Islander" by 0.1%, and "Two or More Races" by 8.6%. The remaining 11.3% of the population should be assumed to have reported "Some other race" per Census documentation.

Chi-Square and Fisher testing indicated a p-value > 0.05, indicating no statistically significant heterogeneity. 


```{r}
obs <- as.data.frame(table(subj_lvl_data$pt_race))
t_total <- length(unique(subj_lvl_data$id))
obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "White" ~ t_total*(0.558),
                               Var1 == "Black or African American" 
                               ~ t_total*(0.188),
                               Var1 == "American Indian or Alaska Native"
                               ~ t_total*(0.005),
                               Var1 == "Asian" ~ t_total*(0.049),
                               Var1 == 
                                 "Native Hawaiian or Other Pacific Islander" 
                               ~ t_total*(0.001),
                               Var1 == "Multiracial" ~ t_total*(0.086),
                               Var1 == "Other Race" ~ t_total*(0.113),
                               Var1 == "Missing" ~ t_total*0
                               )
         ) %>%
  rename_at('Var1', ~'race') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

This was consistent when we omit subjects that were missing a value for race.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!is.na(pt_race))

obs <- as.data.frame(table(t_omit$pt_race))
t_total <- length(unique(t_omit$id))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "White" ~ t_total*(0.558),
                               Var1 == "Black or African American" 
                               ~ t_total*(0.188),
                               Var1 == "American Indian or Alaska Native"
                               ~ t_total*(0.005),
                               Var1 == "Asian" ~ t_total*(0.049),
                               Var1 == 
                                 "Native Hawaiian or Other Pacific Islander" 
                               ~ t_total*(0.001),
                               Var1 == "Multiracial" ~ t_total*(0.086),
                               Var1 == "Other Race" ~ t_total*(0.113)
                               )
         ) %>%
  rename_at('Var1', ~'race') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)

```

This was also consistent when we omit subjects that had more than one value for race.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!multi_race)

obs <- as.data.frame(table(t_omit$pt_race))
t_total <- length(unique(t_omit$id))

obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "White" ~ t_total*(0.558),
                               Var1 == "Black or African American" 
                               ~ t_total*(0.188),
                               Var1 == "American Indian or Alaska Native"
                               ~ t_total*(0.005),
                               Var1 == "Asian" ~ t_total*(0.049),
                               Var1 == 
                                 "Native Hawaiian or Other Pacific Islander" 
                               ~ t_total*(0.001),
                               Var1 == "Multiracial" ~ t_total*(0.086),
                               Var1 == "Other Race" ~ t_total*(0.113),
                               Var1 == "Missing" ~ t_total*0
                               )
         ) %>%
  rename_at('Var1', ~'race') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)

```

### Ethnicity

Observed counts of ethnicity were isolated. Expected counts were calculated utilizing [US Census data for Fort Worth](https://www.census.gov/quickfacts/fact/table/fortworthcitytexas/POP060210), which indicated 35.3% of the population were "Hispanic or Latino", with "Hispanic or Latino" and "Not Hispanic or Latino" as the only selection options. Chi-Square and Fisher testing indicated a p-value > 0.05, indicating no statistically significant heterogeneity. 

```{r}
obs <- as.data.frame(table(subj_lvl_data$pt_hispanic))
t_total <- length(unique(subj_lvl_data$id))
obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "TRUE" ~ t_total*0.353,
                               Var1 == "FALSE" ~ t_total*(1-0.353),
                               Var1 == "Missing" ~ t_total*0
                               )
         ) %>%
  rename_at('Var1', ~'hispanic') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

This was consistent when we omit subjects that were missing a value for ethnicity.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!is.na(pt_hispanic))

obs <- as.data.frame(table(t_omit$pt_hispanic))
t_total <- length(unique(t_omit$id))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "TRUE" ~ t_total*0.353,
                               Var1 == "FALSE" ~ t_total*(1-0.353)
                               )
         ) %>%
  rename_at('Var1', ~'hispanic') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```

It also remained consistent when we omitted the subjects with multiple values for ethnicity.

```{r}
t_omit <- subj_lvl_data %>%
  filter(!multi_ethn)

obs <- as.data.frame(table(t_omit$pt_hispanic))
t_total <- length(unique(t_omit$id))
obs <- rbind(obs, tibble(Var1 = "Missing", Freq = t_total - sum(obs$Freq)))

obs <- obs %>%
  add_column(expected = 0.0) %>%
  mutate(expected = case_when (Var1 == "TRUE" ~ t_total*0.353,
                               Var1 == "FALSE" ~ t_total*(1-0.353),
                               Var1 == "Missing" ~ t_total*0
                               )
         ) %>%
  rename_at('Var1', ~'hispanic') %>%
  rename_at('Freq', ~'observed')

obs

chisq.test(obs$observed, obs$expected)
fisher.test(obs$observed, obs$expected)
```



## Independence for Screening Status

### Age

Subjects that had ever received a DETECT screening were aged between 65 and 119 years, with a mean age of 76.92 years and standard deviation of 8.470 years. Quartile values were 70.0, 76.0, and 83.00 years, respectively. The values were not approximately normally distributed.

```{r}
screened <- subj_lvl_data %>%
  filter(detect_ever_screened)

summary(screened$pt_age)
sd(screened$pt_age)
hist(screened$pt_age)
```

Subjects that did not receive a DETECT screening were aged between 65 and 119 years, with a mean age of 76.29 years and standard deviation of 8.834 years. Quartile values were 69.0, 74.0, and 82.00 years, respectively. The values were not approximately normally distributed.

```{r}
not_screened <- subj_lvl_data %>%
  filter(!detect_ever_screened)

summary(not_screened$pt_age)
sd(not_screened$pt_age)
hist(not_screened$pt_age)
```

The distribution of Patient Age was found to be statistically significant with Mann-Whitney U testing, with a p-value of 0.001. This indicated that those that never received a DETECT screening were slightly younger than the subjects that did receive at least one screening.

```{r}
wilcox.test(pt_age ~ detect_ever_screened, data = subj_lvl_data, na.rm = TRUE, paired = FALSE, conf.int = TRUE)
```



### Sex/Gender

We tested for independence of sex/gender and screening status (if a screening was ever performed). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between sex/gender and if a screening was ever performed.

```{r}
screening <- subj_lvl_data %>%
  group_by(pt_gender, detect_ever_screened) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for sex/gender.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(pt_gender)) %>%
  group_by(pt_gender, detect_ever_screened) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with more than one value for sex/gender.

```{r}
screening <- subj_lvl_data %>%
  filter(!multi_sex) %>%
  group_by(pt_gender, detect_ever_screened) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


### Race

We tested for independence of race and screening status (if a screening was ever performed). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between race and if a screening was ever performed.

```{r}
screening <- subj_lvl_data %>%
  group_by(pt_race, detect_ever_screened) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for race.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(pt_race)) %>%
  group_by(pt_race, detect_ever_screened) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for race.

```{r}
screening <- subj_lvl_data %>%
  filter(!multi_race) %>%
  group_by(pt_race, detect_ever_screened) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

### Ethnicity

We tested for independence of ethnicity and screening status (if a screening was ever performed). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between ethnicity and if a screening was ever performed.

```{r}
screening <- subj_lvl_data %>%
  group_by(pt_hispanic, detect_ever_screened) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for ethnicity.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(pt_hispanic)) %>%
  group_by(pt_hispanic, detect_ever_screened) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for ethnicity.

```{r}
screening <- subj_lvl_data %>%
  filter(!multi_ethn) %>%
  group_by(pt_hispanic, detect_ever_screened) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


## Independence for Screening Outcomes

### Age

Subjects that had ever received a positive DETECT were aged between 65 and 103 years, with a mean age of 76.35 years and standard deviation of 8.627 years. Quartile values were 69.0, 75.0, and 83.00 years, respectively. The values were not approximately normally distributed.

```{r}
screened_pos <- subj_lvl_data %>%
  filter(detect_ever_positive)

summary(screened_pos$pt_age)
sd(screened_pos$pt_age)
hist(screened_pos$pt_age)
```

Subjects that never received a positive DETECT screening were aged between 65 and 119 years, with a mean age of 76.95 years and standard deviation of 8.461 years. Quartile values were 70.0, 76.0, and 83.00 years, respectively. The values were not approximately normally distributed.

```{r}
not_screened <- subj_lvl_data %>%
  filter(!detect_ever_positive)

summary(not_screened$pt_age)
sd(not_screened$pt_age)
hist(not_screened$pt_age)
```

The distribution of Patient Age was found to be statistically significant with Mann-Whitney U testing, with a p-value of 0.030. This indicated that those that never received a positive DETECT screening were slightly older than the subjects that did receive at least one positive screening.

```{r}
wilcox.test(pt_age ~ detect_ever_positive, data = subj_lvl_data, na.rm = TRUE, paired = FALSE, conf.int = TRUE)
```

### Sex/Gender

We tested for independence of sex/gender and screening result (subject-level aggregate). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between sex/gender and if a screening result.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  group_by(pt_gender, detect_ever_positive) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for sex/gender.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  filter(!is.na(pt_gender)) %>%
  group_by(pt_gender, detect_ever_positive) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with more than one value for sex/gender.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  filter(!multi_sex) %>%
  group_by(pt_gender, detect_ever_positive) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


### Race

We tested for independence of race and screening result (subject-level aggregate). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between race and if a screening result.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  group_by(pt_race, detect_ever_positive) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for race.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  filter(!is.na(pt_race)) %>%
  group_by(pt_race, detect_ever_positive) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for race.

```{r}
screening <- subj_lvl_data %>%
  filter(!multi_race) %>%
  group_by(pt_race, detect_ever_screened) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

### Ethnicity

We tested for independence of ethnicity and screening result (subject-level aggregate). The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between ethnicity and if a screening result.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  group_by(pt_hispanic, detect_ever_positive) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for ethnicity.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  filter(!is.na(pt_hispanic)) %>%
  group_by(pt_hispanic, detect_ever_positive) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for ethnicity.

```{r}
screening <- subj_lvl_data %>%
  filter(!is.na(detect_ever_positive)) %>%
  filter(!multi_ethn) %>%
  group_by(pt_hispanic, detect_ever_positive) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```



## Independence for APS Determinations

Our subject pool included 1,331 subjects with at least one valid allegation of EM in the APS data set across any APS Case Number or Intake, 636 subjects that did not have even one valid allegation recorded in the APS data set, and 14,598 subjects that were entirely missing from the APS data set.

```{r}
checking <- subj_lvl_data %>%
  mutate(aps_subject_any_valid = ifelse(
    is.na(aps_subject_any_valid), "Missing", aps_subject_any_valid)
    )

get_unique_value_summary(checking,'aps_subject_any_valid')
```

### Counting Subjects Missing from APS Data as "No Valid Allegations"

For testing, we converted all subjects that lacked APS data to "FALSE" for the presence of any valid allegations in the APS data set.

```{r}
checking <- subj_lvl_data %>%
  mutate(aps_subject_any_valid = ifelse(
    is.na(aps_subject_any_valid), FALSE, aps_subject_any_valid)
    )

get_unique_value_summary(checking,'aps_subject_any_valid')
```


#### Age

Subjects that were associated with at least one valid allegation of elder mistreatment were aged between 65 and 102 years, with a mean age of 76.47 years and standard deviation of 7.969 years. Quartile values were 70.0, 75.0, and 82.25 years, respectively. The values were not approximately normally distributed.

```{r}
any_valid <- checking %>%
  filter(aps_subject_any_valid)

summary(any_valid$pt_age)
sd(any_valid$pt_age)
hist(any_valid$pt_age)
```

Subjects that were either missing from the APS data set or otherwise lacked even one valid allegation of EM in the APS data set were aged between 65 and 119 years, with a mean age of 76.9 years and standard deviation of 8.546 years. Quartile values were 69.5, 76.0, and 83.00 years, respectively. The values were not approximately normally distributed.

```{r}
no_valid <- checking %>%
  filter(!aps_subject_any_valid)

summary(no_valid$pt_age)
sd(no_valid$pt_age)
hist(no_valid$pt_age)
```

The distribution of Patient Age was found to be statistically significant with Mann-Whitney U testing, with a p-value of 0.2651. This indicated that there was not a statistically significant difference in age between subjects that had at least one valid allegation of EM in the APS data set, and those that were either missing or otherwise lacked any valid allegations of EM in the APS data set.

```{r}
wilcox.test(pt_age ~ aps_subject_any_valid, data = checking, na.rm = TRUE, paired = FALSE, conf.int = TRUE)
```

#### Sex/Gender

We tested for independence of sex/gender and the presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between sex/gender and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for sex/gender.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_gender)) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with more than one value for sex/gender.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_sex) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


#### Race

We tested for independence of race and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between race and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for race.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_race)) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for race.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_race) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

#### Ethnicity

We tested for independence of ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for ethnicity.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_hispanic)) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for ethnicity.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_ethn) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

### Excluding Subjects Missing from APS Data

For testing, we omit all subjects that lacked APS data.

```{r}
checking <- subj_lvl_data %>%
  filter(!is.na(aps_subject_any_valid))

get_unique_value_summary(checking,'aps_subject_any_valid')
```


#### Age

Subjects that were associated with at least one valid allegation of elder mistreatment were aged between 65 and 102 years, with a mean age of 76.47 years and standard deviation of 7.969 years. Quartile values were 70.0, 75.0, and 82.25 years, respectively. The values were not approximately normally distributed.

```{r}
any_valid <- checking %>%
  filter(aps_subject_any_valid)

summary(any_valid$pt_age)
sd(any_valid$pt_age)
hist(any_valid$pt_age)
```

Subjects that were were present in the APS data set without any valid allegations of EM were aged between 65 and 106 years, with a mean age of 77.98 years and standard deviation of 8.682 years. Quartile values were 70.0, 77.0, and 85.00 years, respectively. The values were not approximately normally distributed.

```{r}
no_valid <- checking %>%
  filter(!aps_subject_any_valid)

summary(no_valid$pt_age)
sd(no_valid$pt_age)
hist(no_valid$pt_age)
```

The distribution of Patient Age was found to be statistically significant with Mann-Whitney U testing, with a p-value < 0.001. This indicated that there was a statistically significant difference in age between subjects that had at least one valid allegation of EM in the APS data set, and those present in the APS data set without any valid allegations of EM, with subjects with at least one valid allegation being younger.

```{r}
wilcox.test(pt_age ~ aps_subject_any_valid, data = checking, na.rm = TRUE, paired = FALSE, conf.int = TRUE)
```

#### Sex/Gender

We tested for independence of sex/gender and the presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between sex/gender and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for sex/gender.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_gender)) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with more than one value for sex/gender.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_sex) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'sex')

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


#### Race

We tested for independence of race and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between race and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for race.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_race)) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for race.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_race) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

#### Ethnicity

We tested for independence of ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was > 0.05 for both Chi-Square and Fishers, which indicated no significant association between ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

This remained consistent in testing when omitting subjects with missing values for ethnicity.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!is.na(pt_hispanic)) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```


This remained consistent in testing when omitting subjects with more than one value for ethnicity.

```{r}
screening <- checking %>%
  filter(!is.na(aps_subject_any_valid)) %>%
  filter(!multi_ethn) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('0',~'false') %>%
  rename_at('1', ~'true') %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0)
  

screening

chisq.test(screening$true, screening$false)
fisher.test(screening$true, screening$false)
```

### Subjects Missing from APS as Third Category

For testing, we shifted all subjects that lacked APS data to "Missing".

```{r}
checking <- subj_lvl_data %>%
  mutate(aps_subject_any_valid = ifelse(
    is.na(aps_subject_any_valid), 'Missing', aps_subject_any_valid)
    )

get_unique_value_summary(checking,'aps_subject_any_valid')
```


#### Age

Subjects that were associated with at least one valid allegation of elder mistreatment were aged between 65 and 102 years, with a mean age of 76.47 years and standard deviation of 7.969 years. Quartile values were 70.0, 75.0, and 82.25 years, respectively. The values were not approximately normally distributed.

```{r}
any_valid <- checking %>%
  filter(aps_subject_any_valid == "TRUE")

summary(any_valid$pt_age)
sd(any_valid$pt_age)
hist(any_valid$pt_age)
```

Subjects that were were present in the APS data set without any valid allegations of EM were aged between 65 and 106 years, with a mean age of 77.98 years and standard deviation of 8.682 years. Quartile values were 70.0, 77.0, and 85.00 years, respectively. The values were not approximately normally distributed.

```{r}
no_valid <- checking %>%
  filter(aps_subject_any_valid == "FALSE")

summary(no_valid$pt_age)
sd(no_valid$pt_age)
hist(no_valid$pt_age)
```

Subjects that were missing from the APS data set were aged between 65 and 119 years, with a mean age of 76.85 years and standard deviation of 8.537 years. Quartile values were 69.0, 76.0, and 83.00 years, respectively. The values were not approximately normally distributed.

```{r}
no_valid <- checking %>%
  filter(aps_subject_any_valid == "Missing")

summary(no_valid$pt_age)
sd(no_valid$pt_age)
hist(no_valid$pt_age)
```

We visualize the distribution of subject age in the three groups, and find that they have approximately equal variance and distribution

```{r}
ggplot(checking, aes(x=aps_subject_any_valid, y=pt_age)) + 
    geom_boxplot()
```

In Kruskal-Wallis testing, we achieve a p of 0.0022, indicating a statistically significant difference in the distribution of age in at least one of the three groups.


```{r}
kruskal.test(pt_age ~ aps_subject_any_valid, data = checking)
```

Pairwise testing reveals this to be the "FALSE" group: those present in the APS data set, but without a single valid allegation of EM. This group had a statistically significant difference in the distribution of age between both the "TRUE" group and those missing from the APS data set, with p = 0.002 and p = 0.003 respectively. This "FALSE" group was older than the other two groups.

```{r}
pairwise.wilcox.test(checking$pt_age, checking$aps_subject_any_valid,
                     p.adjust.method = "bonferroni")
```

#### Sex/Gender

We tested for independence of sex/gender and the presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was < 0.01 for both Chi-Square and Fishers, which indicated a statistically significant association between sex/gender and presence (or absence) of at least one positive allegation of EM in the APS data set. Subjects missing a value for sex/gender were disproportionately associated with being absent in the APS data set, while having a value for sex/gender was associated with being disproportionally present.

```{r}
screening <- checking %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'sex') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('sex') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for sex/gender, we identify that the difference exists in that subjects missing data for sex/gender are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```


This remained consistent in testing when omitting subjects with missing values for sex/gender.

```{r}
screening <- checking %>%
  filter(!is.na(pt_gender)) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'sex') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('sex') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))

screening

chisq.test(screening)
fisher.test(screening)
```

In exploring the individual categories for sex/gender, we identify that the difference exists in that subjects were disproportionately likely to be *present* in the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

This remained consistent in testing when omitting subjects with more than one value for sex/gender.

```{r}
screening <- checking %>%
  filter(!multi_sex) %>%
  group_by(pt_gender, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_gender, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'sex') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('sex') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for sex/gender, we identify that the difference exists in that subjects missing data for sex/gender are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

#### Race

We tested for independence of race and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was < 0.001 for both Chi-Square and Fishers, which indicated a statistically significant association between race and presence (or absence) of at least one positive allegation of EM in the APS data set. Subjects missing a value for race were disproportionately associated with being absent in the APS data set, while having a value for race was associated with being disproportionately present.

```{r}
screening <- checking %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('race') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for race, we identify that the difference exists in that subjects missing data for race are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

This remained consistent in testing when omitting subjects with missing values for race.

```{r}
screening <- checking %>%
  filter(!is.na(pt_race)) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('race') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for race, we identify that the difference exists in that subjects with values for race are disproportionately likely to be *present* in the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

This remained consistent in testing when omitting subjects with more than one value for race.

```{r}
screening <- checking %>%
  filter(!multi_race) %>%
  group_by(pt_race, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_race, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'race') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('race') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for race, we identify that the difference exists in that subjects missing data for race are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

#### Ethnicity

We tested for independence of ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set. The p-value was < 0.01 for both Chi-Square and Fishers, which indicated statistically significant association between ethnicity and presence (or absence) of at least one positive allegation of EM in the APS data set. Subjects missing a value for ethnicity were disproportionately associated with being absent in the APS data set, while having a value for ethnicity was associated with being disproportionately present.

```{r}
screening <- checking %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('hispanic') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for ethnicity, we identify that the difference exists in that subjects missing data for ethnicity are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

This remained consistent in testing when omitting subjects with missing values for ethnicity.

```{r}
screening <- checking %>%
  filter(!is.na(pt_hispanic)) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('hispanic') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for ethnicity, we identify that the difference exists in that subjects with data for ethnicity are disproportionately likely to be *present* in the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

This remained consistent in testing when omitting subjects with more than one value for ethnicity.

```{r}
screening <- checking %>%
  filter(!multi_ethn) %>%
  group_by(pt_hispanic, aps_subject_any_valid) %>%
  tally() %>%
  spread(pt_hispanic, n)

screening <- rownames_to_column(data.frame(t(screening)) %>% 
  `colnames<-`(.[1, ]) %>%
  .[-1, ]) %>%
  rename_at('rowname',~'hispanic') %>%
  replace(is.na(.),0) %>%
  column_to_rownames('hispanic') %>%
  mutate(across(c("FALSE","Missing","TRUE"), as.numeric))
  

screening

chisq.test(screening)
fisher.test(screening, simulate.p.value = TRUE)
```

In exploring the individual categories for ethnicity, we identify that the difference exists in that subjects missing data for ethnicity are disproportionately likely to be absent from the APS data set.

```{r}
for (i in 1:length(rownames(screening))){
  chisq_vals <- chisq.test(screening[i,])
  
  statement <- paste("Cat: ", rownames(screening[i,]), 
                     "; p-value: ", chisq_vals$p.value,
                     sep = "")
  print(statement)
  print(colnames(screening))
  print(chisq_vals$expected-chisq_vals$observed)
}
```

# Response Pattern Demographics

We created a sample data set which reflected our consolidated demographic data for each subject.

```{r}
demo_updater <- subj_lvl_data %>%
  select(id, pt_race, pt_hispanic, pt_gender, multi_sex, multi_race, multi_ethn, 
         detect_ever_screened, detect_ever_positive)

updated_subj_cases <- case_data %>%
  add_column(multi_sex = NA, multi_race = NA, multi_ethn = NA, 
             detect_ever_screened = NA, detect_ever_positive = NA)

updated_subj_cases <- rows_update(updated_subj_cases, demo_updater, by="id")
```

We also identified the variables for our DETECT screening items.

```{r}
detect_items <- case_data %>%
  select(detect_env_odor, detect_env_hoarding, detect_env_concern, 
         detect_env_isolated, detect_cond_hygiene, detect_cond_clothes, 
         detect_cond_needs, detect_cond_anxious ,detect_meds_hoarding, 
         detect_meds_difficulty, detect_caregiver_lack, 
         detect_caregiver_inattentive, detect_caregiver_frustrated, 
         detect_caregiver_anxious) %>%
  names()
```


## Overall Responses

We had 9,682 screenings performed on a "Male" subject and 14,145 screenings performed on a "Female" subject, of which 401 screenings were performed on subjects that had multiple values listed for sex/gender. There were 180 screenings that lacked a subject sex/gender value.

```{r}
updated_subj_cases %>% 
  group_by(pt_gender, detect_screened) %>%
  tally() %>%
  spread(pt_gender, n) %>%
  replace(is.na(.),0)

updated_subj_cases %>% 
  group_by(multi_sex, detect_screened) %>%
  tally() %>%
  spread(multi_sex, n) %>%
  replace(is.na(.),0)
```

We had 15,084 screenings performed on a "White" subject, 5,602 on a "Black or African American" subject, 307 on an "Asian" subject, 42 on a "Native Hawaiian or Other Pacific Islander" subject, 8 on an "American Indian or Alaska Native" subject, 2,473 on an "Other Race" subject, and 206 on a "Multiracial" subject, of which 860 screenings were performed on subjects with multiple values listed for race. There were 285 screenings performed on subjects missing a race value.

```{r}
updated_subj_cases %>% 
  group_by(pt_race, detect_screened) %>%
  tally() %>%
  spread(pt_race, n) %>%
  replace(is.na(.),0)

updated_subj_cases %>% 
  group_by(multi_race, detect_screened) %>%
  tally() %>%
  spread(multi_race, n) %>%
  replace(is.na(.),0)
```

We had 9,682 screenings performed on a "Male" subject and 14,145 screenings performed on a "Female" subject, of which 401 screenings were performed on subjects that had multiple values listed for sex/gender. There were 180 screenings that lacked a subject sex/gender value.

```{r}
updated_subj_cases %>% 
  group_by(pt_hispanic, detect_screened) %>%
  tally() %>%
  spread(pt_hispanic, n) %>%
  replace(is.na(.),0)

updated_subj_cases %>% 
  group_by(multi_ethn, detect_screened) %>%
  tally() %>%
  spread(multi_ethn, n) %>%
  replace(is.na(.),0)
```

### Item Completions

#### Overall

We calculated the total number of times any specific DETECT screening item was completed, broken down by demographics.

```{r}
completed_demos <- tibble::tibble(!!!c('screening_item', 'total_completed'), 
                                  .rows = 0, 
                                  .name_repair = ~c('screening_item', 
                                                    'total_completed'))

for (i in 1:length(detect_items)){

  subset <- updated_subj_cases %>%
    select(id, pt_gender, multi_sex, pt_race, multi_race, pt_hispanic, multi_ethn, 
           detect_items[i])
  
  colnames(subset)[colnames(subset) == detect_items[i]] <- 'screening_item'
  
  total_completed <- sum(!is.na(subset$screening_item))
  
  completed_row <- cbind('screening_item' = detect_items[i],
                         'total_completed' = total_completed)
  
  t_subset <- subset %>%
    mutate(screening_item = ifelse(!is.na(screening_item), TRUE, FALSE))
  
  
  sex_demo <- t_subset %>%
    group_by(pt_gender, screening_item) %>%
    tally() %>%
    spread(pt_gender, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  sex_multi <- t_subset %>%
    group_by(multi_sex, screening_item) %>%
    tally() %>%
    spread(multi_sex, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  sex_multi <- sex_multi[,'TRUE']
  colnames(sex_multi) <- 'Multi_Sex'
  
  completed_row <- cbind(completed_row, sex_demo, sex_multi)
  
  race_demo <- t_subset %>%
    group_by(pt_race, screening_item) %>%
    tally() %>%
    spread(pt_race, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  race_multi <- t_subset %>%
    group_by(multi_race, screening_item) %>%
    tally() %>%
    spread(multi_race, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  race_multi <- race_multi[,'TRUE']
  colnames(race_multi) <- 'Multi_Race'
  
  completed_row <- cbind(completed_row, race_demo, race_multi)
  
  ethn_demo <- t_subset %>%
    group_by(pt_hispanic, screening_item) %>%
    tally() %>%
    spread(pt_hispanic, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  ethn_multi <- t_subset %>%
    group_by(multi_ethn, screening_item) %>%
    tally() %>%
    spread(multi_ethn, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  ethn_multi <- ethn_multi[,'TRUE']
  colnames(ethn_multi) <- 'Multi_Ethnicity'
  
  completed_row <- cbind(completed_row, ethn_demo, ethn_multi)
  
  completed_demos <- rbind(completed_demos, completed_row)

}
```

```{r}
completed_demos
```


### "Yes" Responses to Items

#### Overall

We calculated the total number of times any specific DETECT screening item was completed with "YES", broken down by demographics.

```{r}
yes_demos <- tibble::tibble(!!!c('screening_item', 'total_yes'), 
                                  .rows = 0, 
                                  .name_repair = ~c('screening_item', 
                                                    'total_yes'))


for (i in 1:length(detect_items)){
  
  subset <- updated_subj_cases %>%
    select(id, pt_gender, multi_sex, pt_race, multi_race, pt_hispanic, multi_ethn, 
           detect_items[i])
  
  colnames(subset)[colnames(subset) == detect_items[i]] <- 'screening_item'
  
  total_yes <- sum(subset$screening_item == "YES", na.rm = TRUE)
  
  yes_row <- cbind('screening_item' = detect_items[i],
                   'total_yes' = total_yes)
  
  t_subset <- subset %>%
    mutate(screening_item = ifelse(screening_item == "YES", TRUE, FALSE))
  
  
  sex_demo <- t_subset %>%
    group_by(pt_gender, screening_item) %>%
    tally() %>%
    spread(pt_gender, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  sex_multi <- t_subset %>%
    group_by(multi_sex, screening_item) %>%
    tally() %>%
    spread(multi_sex, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  sex_multi <- sex_multi[,'TRUE']
  colnames(sex_multi) <- 'Multi_Sex'
  
  yes_row <- cbind(yes_row, sex_demo, sex_multi)
  
  race_demo <- t_subset %>%
    group_by(pt_race, screening_item) %>%
    tally() %>%
    spread(pt_race, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  race_multi <- t_subset %>%
    group_by(multi_race, screening_item) %>%
    tally() %>%
    spread(multi_race, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  race_multi <- race_multi[,'TRUE']
  colnames(race_multi) <- 'Multi_Race'
  
  yes_row <- cbind(yes_row, race_demo, race_multi)
  
  ethn_demo <- t_subset %>%
    group_by(pt_hispanic, screening_item) %>%
    tally() %>%
    spread(pt_hispanic, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  ethn_multi <- t_subset %>%
    group_by(multi_ethn, screening_item) %>%
    tally() %>%
    spread(multi_ethn, n) %>%
    replace(is.na(.),0) %>%
    filter(screening_item == TRUE) %>%
    select(-screening_item)
  
  ethn_multi <- ethn_multi[,'TRUE']
  colnames(ethn_multi) <- 'Multi_Ethnicity'
  
  yes_row <- cbind(yes_row, ethn_demo, ethn_multi)
  
  yes_demos <- rbind(yes_demos, yes_row)

}
```



## Study-Month Trends

We modified our data set to include designation of study month, the number of screenings in each month, and the number of positive screenings in each month.

```{r}
month_trend_data <- updated_subj_cases %>%
  mutate(study_month = case_when(
    response_dt %within% interval(start = date('2017-02-01'),
                                  end = date('2017-03-01')-dseconds(x=1)) ~ 1,
    response_dt %within% interval(start = date('2017-03-01'),
                                  end = date('2017-04-01')-dseconds(x=1)) ~ 2,
    response_dt %within% interval(start = date('2017-04-01'),
                                  end = date('2017-05-01')-dseconds(x=1)) ~ 3,
    response_dt %within% interval(start = date('2017-05-01'),
                                  end = date('2017-06-01')-dseconds(x=1)) ~ 4,
    response_dt %within% interval(start = date('2017-06-01'),
                                  end = date('2017-07-01')-dseconds(x=1)) ~ 5,
    response_dt %within% interval(start = date('2017-07-01'),
                                  end = date('2017-08-01')-dseconds(x=1)) ~ 6,
    response_dt %within% interval(start = date('2017-08-01'),
                                  end = date('2017-09-01')-dseconds(x=1)) ~ 7,
    response_dt %within% interval(start = date('2017-09-01'),
                                  end = date('2017-10-01')-dseconds(x=1)) ~ 8,
    response_dt %within% interval(start = date('2017-10-01'),
                                  end = date('2017-11-01')-dseconds(x=1)) ~ 9,
    response_dt %within% interval(start = date('2017-11-01'),
                                  end = date('2017-12-01')-dseconds(x=1)) ~ 10,
    response_dt %within% interval(start = date('2017-12-01'),
                                  end = date('2018-01-01')-dseconds(x=1)) ~ 11,
    response_dt %within% interval(start = date('2018-01-01'),
                                  end = date('2018-02-01')-dseconds(x=1)) ~ 12,
    response_dt %within% interval(start = date('2018-02-01'),
                                  end = date('2018-03-01')-dseconds(x=1)) ~ 13
    )) %>%
  group_by(study_month) %>%
  mutate(month_screenings = sum(detect_screened),
         month_positives = sum(detect_positive, na.rm=TRUE)
         ) %>%
  ungroup()
```

We initiated our completion trend data frame, and added the overall month-by-month data.

```{r}
trend_cols <- c("study_month", "completed_num", 
                          "completed_per", "yes_num", "yes_per", "detect_item")

completed_trends <- tibble::tibble(!!!trend_cols, .rows = 0, 
                               .name_repair = ~trend_cols)

base_trend <- month_trend_data %>%
  select(study_month, month_screenings) %>%
  distinct() %>%
  add_column(completed_per = 1, yes_num = NA, yes_per = NA, 
             detect_item = "total screenings")

colnames(base_trend)[2] <- "completed_num"

completed_trends <- rbind(completed_trends, base_trend)

base_trend <- month_trend_data %>%
  select(study_month, month_screenings, month_positives) %>%
  distinct() %>%
  mutate(completed_per = month_positives/month_screenings) %>%
  add_column(yes_num = NA, yes_per = NA, detect_item = "positive screenings") %>%
  select(-month_screenings)

colnames(base_trend)[2] <- "completed_num"

completed_trends <- rbind(completed_trends, base_trend)
```

We completed the additional rows for each DETECT screening item.

```{r}
for (i in 1:length(detect_questions)){

  item_trend <- month_trend_data %>%
    select(study_month, month_screenings, detect_questions[i])
  
  colnames(item_trend)[3] <- "detect_item" 
  
  item_trend <- item_trend %>% 
    group_by(study_month) %>%
    mutate(completed_num = sum(!is.na(detect_item)),
           yes_num = sum(detect_item == "YES", na.rm = TRUE)
           ) %>%
    mutate(completed_per = completed_num / month_screenings,
           yes_per = yes_num / completed_num) %>%
    ungroup() %>%
    select(-detect_item) %>%
    distinct()
  
  colnames(item_trend)[3] <- "completed_num"
  
  item_trend <- item_trend %>%
    select(-month_screenings) %>%
    add_column(detect_item = detect_questions[i])

  completed_trends <- rbind(completed_trends, item_trend)
}
```

The number of screenings performed appeared to increase over the study period, while the number of positive screenings appeared to remain fairly constant, though the percentage of positive screenings appeared to decrease over the study period.

```{r}
completed_trends %>%
  filter(detect_item %in% c("total screenings", "positive screenings")) %>%
  relocate(study_month, detect_item) %>%
  arrange(detect_item, study_month)
```

Completion percentages appear to increase while "YES" percentages appear to decrease over the study months for each DETECT Item.

```{r}
completed_trends %>% 
  relocate(study_month, detect_item) %>%
  arrange(detect_item,study_month)
```

### Plots

#### Overall Completion and "YES" Percentage

We plotted the trend in the number of screenings, and the trend in the number of positive screenings. We saw that the number of screenings completed increased over time, though the number of positive screenings remained fairly constant.

```{r}
plotting_data <- completed_trends %>%
  filter(detect_item %in% c("total screenings", "positive screenings"))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_num)) + geom_line(aes(colour=detect_item))
```

We plotted the trend in the percentage of positive screenings. We saw that the percentage of positive screenings experienced a negative trend over time.

```{r}
plotting_data <- completed_trends %>%
  filter(detect_item %in% c("positive screenings"))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

We plotted the completion percentage rates. We see that the most commonly completed items were fairly constant in their completion rates, while the less frequently completed items (primarily caregiver related questions) increased over time.

```{r}
plotting_data <- completed_trends %>%
  filter(!(detect_item %in% c("positive screenings", "total screenings")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

We plotted the "YES" percentage rates. We see that the most commonly completed items wildly fluctuated in their "YES" rates, though overall trends appeared to indicate a decrease in "YES" response frequencies.

```{r}
plotting_data <- completed_trends %>%
  filter(!(detect_item %in% c("positive screenings", "total screenings")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=yes_per)) + geom_line(aes(colour=detect_item))
```

#### Plots for Specific Questions

##### Caregiver Questions

The completion rate of the caregiver DETECT items appeared to have a notable increase at the 5-month mark.

```{r}
plotting_data <- completed_trends %>%
  filter((detect_item %in% 
            c("detect_caregiver_inattentive", "detect_caregiver_lack",
              "detect_caregiver_frustrated", "detect_caregiver_anxious")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

The decline in the "YES" percentage for the caregiver DETECT screening items had a consistent negative trend, most notably in the "If caregiver is present, they appear to lack knowledge of the patient or older adult's medical needs" item.

```{r}
ggplot(data = plotting_data, 
       aes(x=study_month, y=yes_per)) + geom_line(aes(colour=detect_item))
```

##### Environment Questions

The completion rate of the environment DETECT items appeared to be fairly consistent, and nearly absolute across screenings.

```{r}
plotting_data <- completed_trends %>%
  filter((detect_item %in% 
            c("detect_env_odor", "detect_env_hoarding", "detect_env_concern",
              "detect_env_isolated")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

The decline in the "YES" percentage for the environment DETECT screening items appeared to be fairly consistent, with "Unusual odor (e.g., urine, feces)" consistently having the highest rate of "YES" responses and "Is the patient or older adult isolated in the home?" the least. There was a notable down-tick in "YES" responses to all of these items in the 11th study month.

```{r}
ggplot(data = plotting_data, 
       aes(x=study_month, y=yes_per)) + geom_line(aes(colour=detect_item))
```

##### Medication Questions

The completion rate of the medication DETECT items appeared to have nearly identical completion rates, a positive trend in completion percentage, and notable down-tick in completion in the 4th study month.

```{r}
plotting_data <- completed_trends %>%
  filter((detect_item %in% 
            c("detect_meds_difficulty", "detect_meds_hoarding")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

The decline in the "YES" percentage for the medication DETECT screening items appeared to be fairly consistent, with "Does the patient or older adult have difficulties taking their prescribed medications as directed?" consistently having the highest rate of "YES" responses and "Does the patient or older adult appear to be hoarding or saving old medications?" the least. There was a notable down-tick in "YES" responses to both of these items in the 9th and 11th study month, and up-tick in "YES" responses to both of these items around the 5th study month.

```{r}
ggplot(data = plotting_data, 
       aes(x=study_month, y=yes_per)) + geom_line(aes(colour=detect_item))
```

##### Patient Condition Questions

The completion rate of the patient condition DETECT items appeared to fairly consistent completion rates, a positive trend in completion percentage, nearly identical completion rates after the 5th study month, and notable down-tick in completion in the 5th and 8th study month.

```{r}
plotting_data <- completed_trends %>%
  filter((detect_item %in% 
            c("detect_cond_needs", "detect_cond_hygiene", 
              "detect_cond_clothes", "detct_cond_anxious")))

ggplot(data = plotting_data, 
       aes(x=study_month, y=completed_per)) + geom_line(aes(colour=detect_item))
```

The decline in the "YES" percentage for the patient condition DETECT screening items appeared to have a general downtrend, with "Does the patient or older adult have poor personal hygiene (including soiled in urine or feces)?" consistently having the highest rate of "YES" responses and "Is the patient or older adult inadequately clothed or wearing dirty, torn, or soiled clothing?" the least. There was a notable down-tick in "YES" responses to both of these items in the 8th and 11th study month.

```{r}
ggplot(data = plotting_data, 
       aes(x=study_month, y=yes_per)) + geom_line(aes(colour=detect_item))
```

# BOTTOM
